# OT storage using files
# Author: Richard Caceres (@rchrd2)
#
# Intended for small projects where a DB is overkill

fs = undefined
fs = require('fs')

module.exports = (options) ->
  path = undefined
  if options == undefined
    options = {}

  path = options.path or './sharejs-files'
  DEBUG = options.DEBUG

  # create dirs
  fs.mkdirSync(path + '/files') unless fs.existsSync(path + '/files')
  fs.mkdirSync(path + '/ops') unless fs.existsSync(path + '/ops')

  isFunction = (x) ->
    Object::toString.call(x) == '[object Function]'


  return {
    getOps: (docName, start, end, callback) ->
      console.log "getOps " + docName if DEBUG
      fs.readFile path + '/ops/' + docName + '.json', (err, data) ->
        if err
          callback? "Document does not exist"

        ops = []
        try
          data.toString().split(/\n/).forEach (line) ->
            try
              row = JSON.parse(line)
              if row.v >= start
                ops.push row
              else if row.v < end
                ops.push row
            catch err
        catch err

        callback? null, ops
        return
      return


    create: (docName, data, callback) ->
      console.log "create " + docName if DEBUG
      if fs.existsSync(path + '/files/' + docName + '.json')
        console.log 'already exists' if DEBUG
        console.log(callback)
        # note I keep getting an error when calling callback
        # TypeError: callback is not a function
        # callback? 'Document already exists'
      else
        console.log 'creating' if DEBUG
        fs.writeFile path + '/files/' + docName + '.json', JSON.stringify(data), (err) ->
          console.log 'created' + path + '/files/' + docName + '.json' if DEBUG
          return callback? err if err
          callback?()

    'delete': (docName, dbMeta, callback) ->
      console.log "delete " + docName if DEBUG
      fs.unlink path + '/ops/' + docName  + '.json'
      fs.unlink path + '/files/' + docName + '.json', (err) ->
        if err
          callback? "Document does not exist"
        callback?()
        return
      return

    writeOp: (docName, opData, callback) ->
      # TODO efficient way to store ops in files
      console.log "writeOp " + docName if DEBUG
      fs.appendFile path + '/ops/' + docName + '.json', JSON.stringify(opData) + "\n", (err) ->
        callback()
        return
      return

    writeSnapshot: (docName, docData, dbMeta, callback) ->
      console.log "writeSnapshot " + docName if DEBUG
      # Note, this might be an incorrect implementation because it only
      # stores one snapshot and ignores version
      fs.writeFile path + '/files/' + docName + '.json', JSON.stringify(docData), (err) ->
        callback()
        return
      return

    getSnapshot: (docName, callback) ->
      console.log "getSnapshot " + docName if DEBUG
      fs.readFile path + '/files/' + docName + '.json', (err, data) ->
        if err
          callback "Document does not exist"
        try
          obj = JSON.parse(data.toString())
          #console.log obj
          callback null, obj
        catch err
          callback "Document does not exist"
        return
      return
    close: ->
      return

  }

# ---
# generated by js2coffee 2.2.0
